<?xml version="1.0" encoding="utf-8"?>
<!--Using a constraint layout here was pretty straight forward - it's just a fragment displaying text to a user
with one button.  Nothing dynamic or particularly intersting, so a constraint layout made sense.
-->
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
<androidx.constraintlayout.widget.ConstraintLayout
    android:id="@+id/frameLayout2"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".InstructionFragment">


    <TextView
        android:id="@+id/instructionText"
        android:layout_width="327dp"
        android:layout_height="152dp"
        android:layout_marginStart="30dp"
        android:layout_marginEnd="30dp"
        android:gravity="center_horizontal"
        android:text="@string/instructions_message"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/gotItButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="160dp"
        android:layout_marginTop="75dp"
        android:layout_marginEnd="160dp"
        android:gravity="center_horizontal"
        android:text="@string/got_it_label"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/instructionText" />
</androidx.constraintlayout.widget.ConstraintLayout>
</layout>